---
# Custom installer for the IIS Operator
- name: Run custom playbook for IIS operator
  debug:
    msg: "Running Custom Playbook for IIS Operator"

- name: Make a temporary work folder available
  tempfile:
    path: "{{status_dir}}/cp4d"
    state: directory
  register: iis_operator_temp_dir

- name: Validate if the iis-operator is already present
  shell: "oc get pod -n {{ foundational_services_project }} | grep ibm-cpd-iis-operator | wc -l"
  register: get_iis_operator_result

- when: get_iis_operator_result.stdout == "1"
  block:

    - name: IIS operator is already present and creation of operator will be skipped
      debug:
        msg: "The iis-operator is already present, skipping creating operator"

- when: get_iis_operator_result.stdout == "0"
  block:
    
    - name: Prepare yaml file for IIS operator Security Context Constraints
      template:
        src: "iis-scc.j2"
        dest: "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-{{ current_cp4d_cartridge.name }}-scc.yml"

    - name: Create ISS Security Context Constraints
      command: |
        oc apply -f "{{ status_dir }}/cp4d/{{ current_cp4d_cluster.project }}-{{ current_cp4d_cartridge.name }}-scc.yml"
   
    - name: "Save Case file for inventory {{ cartridge_details.inventory }}"
      shell: |
        cloudctl case save \
          --repo {{ case_github_url }} \
          --case ibm-iis \
          --version {{ _current_cp4d_cartridge.case_version }} \
          --outputdir {{ iis_operator_temp_dir.path }}
      register: case_save_result

    - name: "Case launch install Operator for inventory {{ cartridge_details.inventory }}"
      shell: |
        cloudctl case launch \
          --case {{ iis_operator_temp_dir.path }}/ibm-iis-{{ current_cp4d_cartridge.version }}.tgz \
          --tolerance 1 \
          --namespace {{ foundational_services_project }} \
          --action installOperatorNative \
          --inventory {{ cartridge_details.inventory }}
      register: case_launch_result

    - name: Wait for the ibm-cpd-iis-operator to start
      shell: "oc get pod -n {{ foundational_services_project }} | grep ibm-cpd-iis-operator | wc -l"
      register: get_iis_operator_startup_result          
      until:  get_iis_operator_startup_result.stdout == "1"
      retries: 10
      delay: 10
      vars:
        ansible_callback_diy_runner_retry_msg: >-
          {%- set result = ansible_callback_diy.result.output -%}
          {%- set retries_left = result.retries - result.attempts -%}
          Retrying: {{ ansible_callback_diy.task.name }} ({{ retries_left }} Retries left) ...


          

